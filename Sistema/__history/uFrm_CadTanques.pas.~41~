unit uFrm_CadTanques;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, u_DFCad, DB, IBCustomDataSet, IBTable, StdCtrls, Mask, DBCtrls,
  ComCtrls, Buttons, Grids, DBGrids, DBClient;

type
  TFrm_CadTanques = class(T_DFCad)
    Label2: TLabel;
    txt_Descricao: TDBEdit;
    Label3: TLabel;
    txt_Imposto: TDBEdit;
    procedure Btn_NovoClick(Sender: TObject);
    procedure txt_DescricaoKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure txt_ImpostoKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure TCadastroBeforeDelete(DataSet: TDataSet);
    procedure TCadastroBeforePost(DataSet: TDataSet);
    procedure TConsultaAfterOpen(DataSet: TDataSet);
    procedure FormCreate(Sender: TObject);
    procedure TCadastroAfterOpen(DataSet: TDataSet);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_CadTanques: TFrm_CadTanques;

implementation

uses uDM, uClasses;

{$R *.dfm}

procedure TFrm_CadTanques.Btn_NovoClick(Sender: TObject);
begin
  inherited;
  txt_Descricao.Show;
  txt_Descricao.SetFocus;
end;

procedure TFrm_CadTanques.FormCreate(Sender: TObject);
begin
  TConsulta.FieldDefs.Add('Descricao', ftString, 50);
  TConsulta.FieldDefs.Add('Imposto', ftCurrency);
  TCadastro.FieldDefs.Add('Descricao', ftString, 50);
  TCadastro.FieldDefs.Add('Imposto', ftCurrency);
  inherited;
end;

procedure TFrm_CadTanques.TCadastroAfterOpen(DataSet: TDataSet);
var
  Item: TTanque;
begin
  inherited;
  Item := TTanque.Create;
  try
    Item.Abrir(TConsulta.FieldByName('Codigo').AsInteger);
    TCadastro.Append;
    TCadastro.FieldValues['Codigo'] := Item.Codigo;
    TCadastro.FieldValues['Descricao'] := Item.Descricao;
    TCadastro.FieldValues['Imposto'] := Item.Imposto;
    TCadastro.Post;
  finally
    FreeAndNil(Item);
  end;
end;

procedure TFrm_CadTanques.TCadastroBeforeDelete(DataSet: TDataSet);
var
  Item: TTanque;
begin
  inherited;
  Item := TTanque.Create;
  try
    Item.Abrir(TCadastro.FieldByName('Codigo').AsInteger);
    Item.Deletar;
  finally
    FreeAndNil(Item);
  end;
end;

procedure TFrm_CadTanques.TCadastroBeforePost(DataSet: TDataSet);
var
  Item : TTanque;
begin
  inherited;
  Item := TTanque.Create;
  try
    if TCadastro.State = dsEdit then
      Item.Abrir(TCadastro.FieldByName('Codigo').AsInteger);
    Item.Descricao := TCadastro.FieldByName('Descricao').AsString;
    Item.Imposto := TCadastro.FieldByName('Imposto').AsCurrency;
    Item.Salvar;
    if TCadastro.State = dsInsert then
      TCadastro.FieldByName('Codigo').AsInteger := Item.Codigo;
  finally
    FreeAndNil(Item);
  end;
end;

procedure TFrm_CadTanques.TConsultaAfterOpen(DataSet: TDataSet);
var
  Item: TTanque; Lista : TArray<TTanque>;
begin
  inherited;
  Lista := TTanque.Listar;
  for Item in Lista do
  begin
    TConsulta.Append;
    TConsulta.FieldValues['Codigo'] := Item.Codigo;
    TConsulta.FieldValues['Descricao'] := Item.Descricao;
    TConsulta.FieldValues['Imposto'] := Item.Imposto;
    TConsulta.Post;
  end;
end;

procedure TFrm_CadTanques.txt_DescricaoKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if DM.EnterOrTab(Key) then txt_Imposto.SetFocus;
end;

procedure TFrm_CadTanques.txt_ImpostoKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if DM.EnterOrTab(Key) then
    if Btn_Salvar.Enabled then Btn_Salvar.SetFocus else SetFocusDefault;
end;

end.
